---
import "../styles/global.css";
import Footer from "../components/Footer.astro";
import NavigationBar from "../components/NavigationBar.astro";

type Props = {
	title: string;
}

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content="Frau Katerina's Website" />
		<title>{ title }</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
		<script is:inline>
			const DARK_THEME_CLASS = 'dark';
			const COLOUR_MODE = 'COLOUR_MODE';
			const LIGHT_THEME = 'LIGHT';
			const DARK_THEME = 'DARK';

			const rootEl = document.documentElement;
			const getInitialColourMode = () => {
        	const previousSavedColourMode = window.localStorage.getItem(COLOUR_MODE);

			if (previousSavedColourMode) {
				return previousSavedColourMode;
			}
			if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
				return DARK_THEME;
			}
			return LIGHT_THEME;
    	};

		const initialColourMode = getInitialColourMode();
		const setInitialColourMode = (mode) => {
        if (mode === LIGHT_THEME) {
            rootEl.classList.remove(DARK_THEME_CLASS);
        } else {
            rootEl.classList.add(DARK_THEME_CLASS);
        }
    }

    setInitialColourMode(initialColourMode);


		</script>
		
		<title>Astro</title>
	</head>
	<body>
		<main>
			<NavigationBar />
			<slot />
			<Footer  />
		</main>
	</body>	
</html>
